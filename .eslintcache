[{"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\index.js":"1","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\reportWebVitals.js":"2","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\App.js":"3","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\components\\AxiosGet.js":"4","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\JustSearchBar.js":"5"},{"size":517,"mtime":1611242453453,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1611242453454,"results":"8","hashOfConfig":"7"},{"size":459,"mtime":1611263318785,"results":"9","hashOfConfig":"7"},{"size":409,"mtime":1611332663339,"results":"10","hashOfConfig":"7"},{"size":5176,"mtime":1611332580346,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1m2ziac",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\index.js",[],["26","27"],"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\reportWebVitals.js",[],"C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\App.js",["28","29","30"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AxiosGet from './components/AxiosGet'\r\nimport axios from \"axios\";\r\n\r\nimport JustSearchBar from './JustSearchBar';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <JustSearchBar></JustSearchBar>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\components\\AxiosGet.js",["31","32"],"import React, { Component } from 'react'\r\n\r\n\r\nconst AxiosGet = (props) => {\r\n    return (\r\n        <div>\r\n            <ol>{props.arrayOfStories.map((story, index) => {\r\n                return(\r\n                    <li key={index}> {story.title}<br /><a href={story.url} target=\"_blank\">{story.url}</a></li>\r\n                )\r\n            })}</ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default AxiosGet;","C:\\Users\\nicka\\Documents\\Code\\ACA\\411\\411-news\\src\\JustSearchBar.js",["33","34","35","36","37"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport AxiosGet from './components/AxiosGet';\r\n\r\n\r\nclass JustSearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            arrayOfStories: [],\r\n            question: \"\",\r\n            searchState: \"\",\r\n            dropdown: \"term\",\r\n            searched: false\r\n        }\r\n    };\r\n    \r\n    handleDropdown = (event) => {\r\n        this.setState({\r\n            dropdown: event.target.value\r\n        });\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({question: event.target.value})\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log('this word that was searched was ' + this.state.question)\r\n        let searchTerm;\r\n        if(this.state.dropdown === \"term\"){\r\n            searchTerm = `http://hn.algolia.com/api/v1/search?query=${this.state.question}&tags=story`\r\n            this.setState({ searchState: searchTerm})\r\n            console.log(searchTerm)    \r\n            this.setState({searched: true})\r\n        } else if(this.state.dropdown === \"author\"){\r\n            searchTerm = `http://hn.algolia.com/api/v1/search?tags=story,author_${this.state.question}`\r\n            this.setState({ searchState: searchTerm})\r\n            console.log(searchTerm)    \r\n            this.setState({searched: true})\r\n        }\r\n        axios.get(searchTerm)\r\n            .then( res => {\r\n                const arrayOfStories = res.data.hits\r\n                this.setState({ arrayOfStories })\r\n            })\r\n    }\r\n\r\n    // resetPage = () => {\r\n    //     console.log(\"click\")\r\n    //     this.setState({\r\n    //         arrayOfStories: [],\r\n    //         question: \"\",\r\n    //         searchState: \"\",\r\n    //         dropdown: \"term\",\r\n    //         searched: false\r\n    //     })\r\n    // }\r\n    \r\n    render() {\r\n        if(!this.state.searchState && this.state.dropdown == 'term') {\r\n            return(\r\n                <section>\r\n                <label>Search By:  </label>\r\n                <select value={this.state.dropdown} onChange={this.handleDropdown}>\r\n                    <option value=\"term\" >Term</option>\r\n                    <option value=\"author\">Author</option>\r\n                </select>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"Seach by term\" value={this.state.question} onChange={e=>this.handleChange(e)} />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                </section>\r\n            );\r\n        } else if(!this.state.searchState && this.state.dropdown == 'author') {\r\n            return(\r\n                <section>\r\n                <label>Search By:  </label>\r\n                <select value={this.state.dropdown} onChange={this.handleDropdown}>\r\n                    <option value=\"term\" >Term</option>\r\n                    <option value=\"author\">Author</option>\r\n                </select>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"Seach by author\" value={this.state.question} onChange={e=>this.handleChange(e)} />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                </section>\r\n            );\r\n        } else if (this.state.searchState && this.state.dropdown == 'term') {\r\n            return(\r\n                <section>\r\n                    <label>Search By:  </label>\r\n                <select value={this.state.dropdown} onChange={this.handleDropdown}>\r\n                    <option value=\"term\">Term</option>\r\n                    <option value=\"author\">Author</option>\r\n                </select>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" placeholder=\"Seach by term\" value={this.state.question} onChange={e=>this.handleChange(e)} />\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                    </form>\r\n                    {/* <button onClick={this.resetPage}>reset</button> */}\r\n                    <AxiosGet arrayOfStories={this.state.arrayOfStories} />\r\n                </section>\r\n            )\r\n        } else if (this.state.searchState && this.state.dropdown == 'author') {\r\n            return(\r\n                <section>\r\n                    <label>Search By:  </label>\r\n                <select value={this.state.dropdown} onChange={this.handleDropdown}>\r\n                    <option value=\"term\">Term</option>\r\n                    <option value=\"author\">Author</option>\r\n                </select>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" placeholder=\"Seach by author\" value={this.state.question} onChange={e=>this.handleChange(e)} />\r\n                        <input type=\"submit\" value=\"Submit\" />\r\n                    </form>\r\n                    {/* <button onClick={this.resetPage}>reset</button> */}\r\n                    <AxiosGet arrayOfStories={this.state.arrayOfStories} />\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default JustSearchBar;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":16},{"ruleId":"42","severity":1,"message":"46","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":9,"column":3,"nodeType":"49","messageId":"50","endLine":12,"endColumn":4},{"ruleId":"42","severity":1,"message":"51","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"53","line":9,"column":57,"nodeType":"54","endLine":9,"endColumn":93},{"ruleId":"42","severity":1,"message":"51","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":63,"column":59,"nodeType":"57","messageId":"58","endLine":63,"endColumn":61},{"ruleId":"55","severity":1,"message":"56","line":77,"column":66,"nodeType":"57","messageId":"58","endLine":77,"endColumn":68},{"ruleId":"55","severity":1,"message":"56","line":91,"column":66,"nodeType":"57","messageId":"58","endLine":91,"endColumn":68},{"ruleId":"55","severity":1,"message":"56","line":107,"column":66,"nodeType":"57","messageId":"58","endLine":107,"endColumn":68},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'AxiosGet' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]